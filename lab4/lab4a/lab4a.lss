
lab4a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000073a  000007ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000007b2  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000a0  00000000  00000000  000007c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000655  00000000  00000000  00000868  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000220  00000000  00000000  00000ebd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000298  00000000  00000000  000010dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000038  00000000  00000000  00001378  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001c5  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000118  00000000  00000000  00001575  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  0000168d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e3       	ldi	r30, 0x3A	; 58
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 9b 03 	jmp	0x736	; 0x736 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
static void delayMs (uint16_t ms);
/*********************************************
	Main Function
**********************************************/

int main(int argc, char const *argv[]){
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	00 d0       	rcall	.+0      	; 0x9c <main+0x6>
  9c:	1f 92       	push	r1
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
static void initUART(uint32_t baud){

   //double-speed mode UBRR formula
   unsigned int ubrr = F_CPU/8/baud -1;
   //shift MSB and store in UBRR0H 
   UBRR0H = (unsigned char) (ubrr >> 8); 
  a2:	10 92 c5 00 	sts	0x00C5, r1
   //store LSB in UBRR0L      
   UBRR0L = (unsigned char) ubrr;
  a6:	8f ec       	ldi	r24, 0xCF	; 207
  a8:	80 93 c4 00 	sts	0x00C4, r24
   //enable double speed mode
   UCSR0A = (1 << U2X0);
  ac:	82 e0       	ldi	r24, 0x02	; 2
  ae:	80 93 c0 00 	sts	0x00C0, r24
   //enable transmitter/receiver 
   UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  b2:	88 e1       	ldi	r24, 0x18	; 24
  b4:	80 93 c1 00 	sts	0x00C1, r24
   //8-Bit Characters, 1 Stop bits, Even parity
   UCSR0C = (1 << UCSZ00) | (1 << UCSZ01) | (1 << UPM01);
  b8:	86 e2       	ldi	r24, 0x26	; 38
  ba:	80 93 c2 00 	sts	0x00C2, r24
	3). Disable digital buffer for analog input pins
*/

static void initADC(void){

	ADCSRA = 0;
  be:	10 92 7a 00 	sts	0x007A, r1
	//enable ADC
	ADCSRA |= ( 1 << ADEN );
  c2:	80 91 7a 00 	lds	r24, 0x007A
  c6:	80 68       	ori	r24, 0x80	; 128
  c8:	80 93 7a 00 	sts	0x007A, r24
	//Vref internally connect to AVcc
	ADMUX |= ( 1 << REFS0 );
  cc:	80 91 7c 00 	lds	r24, 0x007C
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 93 7c 00 	sts	0x007C, r24

	//right adjusted for 8-bit resolution
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1);
  d6:	80 91 7a 00 	lds	r24, 0x007A
  da:	86 60       	ori	r24, 0x06	; 6
  dc:	80 93 7a 00 	sts	0x007A, r24
	//disable digital input for ADC pins
	DIDR0 |= ((1 << ADC5D) | (1 << ADC4D) | (1 << ADC3D) | (1 << ADC2D) | (1 << ADC1D) | (1 << ADC0D));
  e0:	80 91 7e 00 	lds	r24, 0x007E
  e4:	8f 63       	ori	r24, 0x3F	; 63
  e6:	80 93 7e 00 	sts	0x007E, r24
	//start the first conversion
	ADCSRA |= (1 << ADSC);
  ea:	80 91 7a 00 	lds	r24, 0x007A
  ee:	80 64       	ori	r24, 0x40	; 64
  f0:	80 93 7a 00 	sts	0x007A, r24
*/

static void printUint16(uint16_t num){

	char str[3];
	sprintf(str,"%hu",num);
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	e8 2e       	mov	r14, r24
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	f8 2e       	mov	r15, r24
  fc:	8e 01       	movw	r16, r28
  fe:	0f 5f       	subi	r16, 0xFF	; 255
 100:	1f 4f       	sbci	r17, 0xFF	; 255
static void transmitByte(uint8_t data){

	// Wait for empty transmit buffer
   	while ( !(UCSR0A & (1 << UDRE0)) );
    // Start transmission by writing to UDR0 register
   	UDR0 = data;
 102:	90 e2       	ldi	r25, 0x20	; 32
 104:	d9 2e       	mov	r13, r25
*/

static uint16_t analog(uint8_t channel){

	//clear MUX[3:0]
	ADMUX &= 0xF0; 
 106:	80 91 7c 00 	lds	r24, 0x007C
 10a:	80 7f       	andi	r24, 0xF0	; 240
 10c:	80 93 7c 00 	sts	0x007C, r24
	//select channel
	ADMUX |= channel; 
 110:	80 91 7c 00 	lds	r24, 0x007C
 114:	80 93 7c 00 	sts	0x007C, r24
	//start conversion
	ADCSRA |= (1 << ADSC);
 118:	80 91 7a 00 	lds	r24, 0x007A
 11c:	80 64       	ori	r24, 0x40	; 64
 11e:	80 93 7a 00 	sts	0x007A, r24
	//wait for the conversion completed
	while(ADCSRA & ( 1 << ADSC));
 122:	80 91 7a 00 	lds	r24, 0x007A
 126:	86 fd       	sbrc	r24, 6
 128:	fc cf       	rjmp	.-8      	; 0x122 <main+0x8c>
	//ADIF=1
	ADCSRA |= (1 << ADIF);  
 12a:	80 91 7a 00 	lds	r24, 0x007A
 12e:	80 61       	ori	r24, 0x10	; 16
 130:	80 93 7a 00 	sts	0x007A, r24

	return ADC;
 134:	80 91 78 00 	lds	r24, 0x0078
 138:	90 91 79 00 	lds	r25, 0x0079
*/

static void printUint16(uint16_t num){

	char str[3];
	sprintf(str,"%hu",num);
 13c:	9f 93       	push	r25
 13e:	8f 93       	push	r24
 140:	ff 92       	push	r15
 142:	ef 92       	push	r14
 144:	1f 93       	push	r17
 146:	0f 93       	push	r16
 148:	0e 94 ca 00 	call	0x194	; 0x194 <sprintf>
	str[2] = '\0';
 14c:	1b 82       	std	Y+3, r1	; 0x03
 14e:	f8 01       	movw	r30, r16
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	0f 90       	pop	r0
 15a:	0f 90       	pop	r0
*/

static void transmitString(char* stringPtr){

	char* iter = stringPtr;
	while(*iter != '\0'){
 15c:	81 91       	ld	r24, Z+
 15e:	88 23       	and	r24, r24
 160:	39 f0       	breq	.+14     	; 0x170 <main+0xda>
*/ 

static void transmitByte(uint8_t data){

	// Wait for empty transmit buffer
   	while ( !(UCSR0A & (1 << UDRE0)) );
 162:	90 91 c0 00 	lds	r25, 0x00C0
 166:	95 ff       	sbrs	r25, 5
 168:	fc cf       	rjmp	.-8      	; 0x162 <main+0xcc>
    // Start transmission by writing to UDR0 register
   	UDR0 = data;
 16a:	80 93 c6 00 	sts	0x00C6, r24
 16e:	f6 cf       	rjmp	.-20     	; 0x15c <main+0xc6>
*/ 

static void transmitByte(uint8_t data){

	// Wait for empty transmit buffer
   	while ( !(UCSR0A & (1 << UDRE0)) );
 170:	80 91 c0 00 	lds	r24, 0x00C0
 174:	85 ff       	sbrs	r24, 5
 176:	fc cf       	rjmp	.-8      	; 0x170 <main+0xda>
    // Start transmission by writing to UDR0 register
   	UDR0 = data;
 178:	d0 92 c6 00 	sts	0x00C6, r13
 17c:	84 ef       	ldi	r24, 0xF4	; 244
 17e:	91 e0       	ldi	r25, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 180:	ef e9       	ldi	r30, 0x9F	; 159
 182:	ff e0       	ldi	r31, 0x0F	; 15
 184:	31 97       	sbiw	r30, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <main+0xee>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0xf4>
 18a:	00 00       	nop
 18c:	01 97       	sbiw	r24, 0x01	; 1
	delay function
*/

static void delayMs (uint16_t ms) {
	uint16_t i;
	for (i = 0; i < ms; i++)
 18e:	00 97       	sbiw	r24, 0x00	; 0
 190:	b9 f7       	brne	.-18     	; 0x180 <main+0xea>
 192:	b9 cf       	rjmp	.-142    	; 0x106 <main+0x70>

00000194 <sprintf>:
 194:	ae e0       	ldi	r26, 0x0E	; 14
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	e0 ed       	ldi	r30, 0xD0	; 208
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__prologue_saves__+0x1c>
 1a0:	0d 89       	ldd	r16, Y+21	; 0x15
 1a2:	1e 89       	ldd	r17, Y+22	; 0x16
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	8c 83       	std	Y+4, r24	; 0x04
 1a8:	1a 83       	std	Y+2, r17	; 0x02
 1aa:	09 83       	std	Y+1, r16	; 0x01
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	9f e7       	ldi	r25, 0x7F	; 127
 1b0:	9e 83       	std	Y+6, r25	; 0x06
 1b2:	8d 83       	std	Y+5, r24	; 0x05
 1b4:	ae 01       	movw	r20, r28
 1b6:	47 5e       	subi	r20, 0xE7	; 231
 1b8:	5f 4f       	sbci	r21, 0xFF	; 255
 1ba:	6f 89       	ldd	r22, Y+23	; 0x17
 1bc:	78 8d       	ldd	r23, Y+24	; 0x18
 1be:	ce 01       	movw	r24, r28
 1c0:	01 96       	adiw	r24, 0x01	; 1
 1c2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <vfprintf>
 1c6:	ef 81       	ldd	r30, Y+7	; 0x07
 1c8:	f8 85       	ldd	r31, Y+8	; 0x08
 1ca:	e0 0f       	add	r30, r16
 1cc:	f1 1f       	adc	r31, r17
 1ce:	10 82       	st	Z, r1
 1d0:	2e 96       	adiw	r28, 0x0e	; 14
 1d2:	e4 e0       	ldi	r30, 0x04	; 4
 1d4:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__epilogue_restores__+0x1c>

000001d8 <vfprintf>:
 1d8:	ac e0       	ldi	r26, 0x0C	; 12
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	e2 ef       	ldi	r30, 0xF2	; 242
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__prologue_saves__>
 1e4:	7c 01       	movw	r14, r24
 1e6:	6b 01       	movw	r12, r22
 1e8:	8a 01       	movw	r16, r20
 1ea:	fc 01       	movw	r30, r24
 1ec:	17 82       	std	Z+7, r1	; 0x07
 1ee:	16 82       	std	Z+6, r1	; 0x06
 1f0:	83 81       	ldd	r24, Z+3	; 0x03
 1f2:	81 ff       	sbrs	r24, 1
 1f4:	bd c1       	rjmp	.+890    	; 0x570 <vfprintf+0x398>
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	4c 01       	movw	r8, r24
 1fc:	f7 01       	movw	r30, r14
 1fe:	93 81       	ldd	r25, Z+3	; 0x03
 200:	f6 01       	movw	r30, r12
 202:	93 fd       	sbrc	r25, 3
 204:	85 91       	lpm	r24, Z+
 206:	93 ff       	sbrs	r25, 3
 208:	81 91       	ld	r24, Z+
 20a:	6f 01       	movw	r12, r30
 20c:	88 23       	and	r24, r24
 20e:	09 f4       	brne	.+2      	; 0x212 <vfprintf+0x3a>
 210:	ab c1       	rjmp	.+854    	; 0x568 <vfprintf+0x390>
 212:	85 32       	cpi	r24, 0x25	; 37
 214:	39 f4       	brne	.+14     	; 0x224 <vfprintf+0x4c>
 216:	93 fd       	sbrc	r25, 3
 218:	85 91       	lpm	r24, Z+
 21a:	93 ff       	sbrs	r25, 3
 21c:	81 91       	ld	r24, Z+
 21e:	6f 01       	movw	r12, r30
 220:	85 32       	cpi	r24, 0x25	; 37
 222:	29 f4       	brne	.+10     	; 0x22e <vfprintf+0x56>
 224:	b7 01       	movw	r22, r14
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 22c:	e7 cf       	rjmp	.-50     	; 0x1fc <vfprintf+0x24>
 22e:	51 2c       	mov	r5, r1
 230:	31 2c       	mov	r3, r1
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	20 32       	cpi	r18, 0x20	; 32
 236:	a0 f4       	brcc	.+40     	; 0x260 <vfprintf+0x88>
 238:	8b 32       	cpi	r24, 0x2B	; 43
 23a:	69 f0       	breq	.+26     	; 0x256 <vfprintf+0x7e>
 23c:	30 f4       	brcc	.+12     	; 0x24a <vfprintf+0x72>
 23e:	80 32       	cpi	r24, 0x20	; 32
 240:	59 f0       	breq	.+22     	; 0x258 <vfprintf+0x80>
 242:	83 32       	cpi	r24, 0x23	; 35
 244:	69 f4       	brne	.+26     	; 0x260 <vfprintf+0x88>
 246:	20 61       	ori	r18, 0x10	; 16
 248:	2c c0       	rjmp	.+88     	; 0x2a2 <vfprintf+0xca>
 24a:	8d 32       	cpi	r24, 0x2D	; 45
 24c:	39 f0       	breq	.+14     	; 0x25c <vfprintf+0x84>
 24e:	80 33       	cpi	r24, 0x30	; 48
 250:	39 f4       	brne	.+14     	; 0x260 <vfprintf+0x88>
 252:	21 60       	ori	r18, 0x01	; 1
 254:	26 c0       	rjmp	.+76     	; 0x2a2 <vfprintf+0xca>
 256:	22 60       	ori	r18, 0x02	; 2
 258:	24 60       	ori	r18, 0x04	; 4
 25a:	23 c0       	rjmp	.+70     	; 0x2a2 <vfprintf+0xca>
 25c:	28 60       	ori	r18, 0x08	; 8
 25e:	21 c0       	rjmp	.+66     	; 0x2a2 <vfprintf+0xca>
 260:	27 fd       	sbrc	r18, 7
 262:	27 c0       	rjmp	.+78     	; 0x2b2 <vfprintf+0xda>
 264:	30 ed       	ldi	r19, 0xD0	; 208
 266:	38 0f       	add	r19, r24
 268:	3a 30       	cpi	r19, 0x0A	; 10
 26a:	78 f4       	brcc	.+30     	; 0x28a <vfprintf+0xb2>
 26c:	26 ff       	sbrs	r18, 6
 26e:	06 c0       	rjmp	.+12     	; 0x27c <vfprintf+0xa4>
 270:	fa e0       	ldi	r31, 0x0A	; 10
 272:	5f 9e       	mul	r5, r31
 274:	30 0d       	add	r19, r0
 276:	11 24       	eor	r1, r1
 278:	53 2e       	mov	r5, r19
 27a:	13 c0       	rjmp	.+38     	; 0x2a2 <vfprintf+0xca>
 27c:	8a e0       	ldi	r24, 0x0A	; 10
 27e:	38 9e       	mul	r3, r24
 280:	30 0d       	add	r19, r0
 282:	11 24       	eor	r1, r1
 284:	33 2e       	mov	r3, r19
 286:	20 62       	ori	r18, 0x20	; 32
 288:	0c c0       	rjmp	.+24     	; 0x2a2 <vfprintf+0xca>
 28a:	8e 32       	cpi	r24, 0x2E	; 46
 28c:	21 f4       	brne	.+8      	; 0x296 <vfprintf+0xbe>
 28e:	26 fd       	sbrc	r18, 6
 290:	6b c1       	rjmp	.+726    	; 0x568 <vfprintf+0x390>
 292:	20 64       	ori	r18, 0x40	; 64
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <vfprintf+0xca>
 296:	8c 36       	cpi	r24, 0x6C	; 108
 298:	11 f4       	brne	.+4      	; 0x29e <vfprintf+0xc6>
 29a:	20 68       	ori	r18, 0x80	; 128
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <vfprintf+0xca>
 29e:	88 36       	cpi	r24, 0x68	; 104
 2a0:	41 f4       	brne	.+16     	; 0x2b2 <vfprintf+0xda>
 2a2:	f6 01       	movw	r30, r12
 2a4:	93 fd       	sbrc	r25, 3
 2a6:	85 91       	lpm	r24, Z+
 2a8:	93 ff       	sbrs	r25, 3
 2aa:	81 91       	ld	r24, Z+
 2ac:	6f 01       	movw	r12, r30
 2ae:	81 11       	cpse	r24, r1
 2b0:	c1 cf       	rjmp	.-126    	; 0x234 <vfprintf+0x5c>
 2b2:	98 2f       	mov	r25, r24
 2b4:	9f 7d       	andi	r25, 0xDF	; 223
 2b6:	95 54       	subi	r25, 0x45	; 69
 2b8:	93 30       	cpi	r25, 0x03	; 3
 2ba:	28 f4       	brcc	.+10     	; 0x2c6 <vfprintf+0xee>
 2bc:	0c 5f       	subi	r16, 0xFC	; 252
 2be:	1f 4f       	sbci	r17, 0xFF	; 255
 2c0:	ff e3       	ldi	r31, 0x3F	; 63
 2c2:	f9 83       	std	Y+1, r31	; 0x01
 2c4:	0d c0       	rjmp	.+26     	; 0x2e0 <vfprintf+0x108>
 2c6:	83 36       	cpi	r24, 0x63	; 99
 2c8:	31 f0       	breq	.+12     	; 0x2d6 <vfprintf+0xfe>
 2ca:	83 37       	cpi	r24, 0x73	; 115
 2cc:	71 f0       	breq	.+28     	; 0x2ea <vfprintf+0x112>
 2ce:	83 35       	cpi	r24, 0x53	; 83
 2d0:	09 f0       	breq	.+2      	; 0x2d4 <vfprintf+0xfc>
 2d2:	5b c0       	rjmp	.+182    	; 0x38a <vfprintf+0x1b2>
 2d4:	22 c0       	rjmp	.+68     	; 0x31a <vfprintf+0x142>
 2d6:	f8 01       	movw	r30, r16
 2d8:	80 81       	ld	r24, Z
 2da:	89 83       	std	Y+1, r24	; 0x01
 2dc:	0e 5f       	subi	r16, 0xFE	; 254
 2de:	1f 4f       	sbci	r17, 0xFF	; 255
 2e0:	44 24       	eor	r4, r4
 2e2:	43 94       	inc	r4
 2e4:	51 2c       	mov	r5, r1
 2e6:	54 01       	movw	r10, r8
 2e8:	15 c0       	rjmp	.+42     	; 0x314 <vfprintf+0x13c>
 2ea:	38 01       	movw	r6, r16
 2ec:	f2 e0       	ldi	r31, 0x02	; 2
 2ee:	6f 0e       	add	r6, r31
 2f0:	71 1c       	adc	r7, r1
 2f2:	f8 01       	movw	r30, r16
 2f4:	a0 80       	ld	r10, Z
 2f6:	b1 80       	ldd	r11, Z+1	; 0x01
 2f8:	26 ff       	sbrs	r18, 6
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <vfprintf+0x12a>
 2fc:	65 2d       	mov	r22, r5
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	02 c0       	rjmp	.+4      	; 0x306 <vfprintf+0x12e>
 302:	6f ef       	ldi	r22, 0xFF	; 255
 304:	7f ef       	ldi	r23, 0xFF	; 255
 306:	c5 01       	movw	r24, r10
 308:	2c 87       	std	Y+12, r18	; 0x0c
 30a:	0e 94 c9 02 	call	0x592	; 0x592 <strnlen>
 30e:	2c 01       	movw	r4, r24
 310:	83 01       	movw	r16, r6
 312:	2c 85       	ldd	r18, Y+12	; 0x0c
 314:	2f 77       	andi	r18, 0x7F	; 127
 316:	22 2e       	mov	r2, r18
 318:	17 c0       	rjmp	.+46     	; 0x348 <vfprintf+0x170>
 31a:	38 01       	movw	r6, r16
 31c:	f2 e0       	ldi	r31, 0x02	; 2
 31e:	6f 0e       	add	r6, r31
 320:	71 1c       	adc	r7, r1
 322:	f8 01       	movw	r30, r16
 324:	a0 80       	ld	r10, Z
 326:	b1 80       	ldd	r11, Z+1	; 0x01
 328:	26 ff       	sbrs	r18, 6
 32a:	03 c0       	rjmp	.+6      	; 0x332 <vfprintf+0x15a>
 32c:	65 2d       	mov	r22, r5
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	02 c0       	rjmp	.+4      	; 0x336 <vfprintf+0x15e>
 332:	6f ef       	ldi	r22, 0xFF	; 255
 334:	7f ef       	ldi	r23, 0xFF	; 255
 336:	c5 01       	movw	r24, r10
 338:	2c 87       	std	Y+12, r18	; 0x0c
 33a:	0e 94 be 02 	call	0x57c	; 0x57c <strnlen_P>
 33e:	2c 01       	movw	r4, r24
 340:	2c 85       	ldd	r18, Y+12	; 0x0c
 342:	20 68       	ori	r18, 0x80	; 128
 344:	22 2e       	mov	r2, r18
 346:	83 01       	movw	r16, r6
 348:	23 fc       	sbrc	r2, 3
 34a:	1b c0       	rjmp	.+54     	; 0x382 <vfprintf+0x1aa>
 34c:	83 2d       	mov	r24, r3
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	48 16       	cp	r4, r24
 352:	59 06       	cpc	r5, r25
 354:	b0 f4       	brcc	.+44     	; 0x382 <vfprintf+0x1aa>
 356:	b7 01       	movw	r22, r14
 358:	80 e2       	ldi	r24, 0x20	; 32
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 360:	3a 94       	dec	r3
 362:	f4 cf       	rjmp	.-24     	; 0x34c <vfprintf+0x174>
 364:	f5 01       	movw	r30, r10
 366:	27 fc       	sbrc	r2, 7
 368:	85 91       	lpm	r24, Z+
 36a:	27 fe       	sbrs	r2, 7
 36c:	81 91       	ld	r24, Z+
 36e:	5f 01       	movw	r10, r30
 370:	b7 01       	movw	r22, r14
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 378:	31 10       	cpse	r3, r1
 37a:	3a 94       	dec	r3
 37c:	f1 e0       	ldi	r31, 0x01	; 1
 37e:	4f 1a       	sub	r4, r31
 380:	51 08       	sbc	r5, r1
 382:	41 14       	cp	r4, r1
 384:	51 04       	cpc	r5, r1
 386:	71 f7       	brne	.-36     	; 0x364 <vfprintf+0x18c>
 388:	e5 c0       	rjmp	.+458    	; 0x554 <vfprintf+0x37c>
 38a:	84 36       	cpi	r24, 0x64	; 100
 38c:	11 f0       	breq	.+4      	; 0x392 <vfprintf+0x1ba>
 38e:	89 36       	cpi	r24, 0x69	; 105
 390:	39 f5       	brne	.+78     	; 0x3e0 <vfprintf+0x208>
 392:	f8 01       	movw	r30, r16
 394:	27 ff       	sbrs	r18, 7
 396:	07 c0       	rjmp	.+14     	; 0x3a6 <vfprintf+0x1ce>
 398:	60 81       	ld	r22, Z
 39a:	71 81       	ldd	r23, Z+1	; 0x01
 39c:	82 81       	ldd	r24, Z+2	; 0x02
 39e:	93 81       	ldd	r25, Z+3	; 0x03
 3a0:	0c 5f       	subi	r16, 0xFC	; 252
 3a2:	1f 4f       	sbci	r17, 0xFF	; 255
 3a4:	08 c0       	rjmp	.+16     	; 0x3b6 <vfprintf+0x1de>
 3a6:	60 81       	ld	r22, Z
 3a8:	71 81       	ldd	r23, Z+1	; 0x01
 3aa:	88 27       	eor	r24, r24
 3ac:	77 fd       	sbrc	r23, 7
 3ae:	80 95       	com	r24
 3b0:	98 2f       	mov	r25, r24
 3b2:	0e 5f       	subi	r16, 0xFE	; 254
 3b4:	1f 4f       	sbci	r17, 0xFF	; 255
 3b6:	2f 76       	andi	r18, 0x6F	; 111
 3b8:	b2 2e       	mov	r11, r18
 3ba:	97 ff       	sbrs	r25, 7
 3bc:	09 c0       	rjmp	.+18     	; 0x3d0 <vfprintf+0x1f8>
 3be:	90 95       	com	r25
 3c0:	80 95       	com	r24
 3c2:	70 95       	com	r23
 3c4:	61 95       	neg	r22
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ca:	9f 4f       	sbci	r25, 0xFF	; 255
 3cc:	20 68       	ori	r18, 0x80	; 128
 3ce:	b2 2e       	mov	r11, r18
 3d0:	2a e0       	ldi	r18, 0x0A	; 10
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	a4 01       	movw	r20, r8
 3d6:	0e 94 06 03 	call	0x60c	; 0x60c <__ultoa_invert>
 3da:	a8 2e       	mov	r10, r24
 3dc:	a8 18       	sub	r10, r8
 3de:	44 c0       	rjmp	.+136    	; 0x468 <vfprintf+0x290>
 3e0:	85 37       	cpi	r24, 0x75	; 117
 3e2:	29 f4       	brne	.+10     	; 0x3ee <vfprintf+0x216>
 3e4:	2f 7e       	andi	r18, 0xEF	; 239
 3e6:	b2 2e       	mov	r11, r18
 3e8:	2a e0       	ldi	r18, 0x0A	; 10
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	25 c0       	rjmp	.+74     	; 0x438 <vfprintf+0x260>
 3ee:	f2 2f       	mov	r31, r18
 3f0:	f9 7f       	andi	r31, 0xF9	; 249
 3f2:	bf 2e       	mov	r11, r31
 3f4:	8f 36       	cpi	r24, 0x6F	; 111
 3f6:	c1 f0       	breq	.+48     	; 0x428 <vfprintf+0x250>
 3f8:	18 f4       	brcc	.+6      	; 0x400 <vfprintf+0x228>
 3fa:	88 35       	cpi	r24, 0x58	; 88
 3fc:	79 f0       	breq	.+30     	; 0x41c <vfprintf+0x244>
 3fe:	b4 c0       	rjmp	.+360    	; 0x568 <vfprintf+0x390>
 400:	80 37       	cpi	r24, 0x70	; 112
 402:	19 f0       	breq	.+6      	; 0x40a <vfprintf+0x232>
 404:	88 37       	cpi	r24, 0x78	; 120
 406:	21 f0       	breq	.+8      	; 0x410 <vfprintf+0x238>
 408:	af c0       	rjmp	.+350    	; 0x568 <vfprintf+0x390>
 40a:	2f 2f       	mov	r18, r31
 40c:	20 61       	ori	r18, 0x10	; 16
 40e:	b2 2e       	mov	r11, r18
 410:	b4 fe       	sbrs	r11, 4
 412:	0d c0       	rjmp	.+26     	; 0x42e <vfprintf+0x256>
 414:	8b 2d       	mov	r24, r11
 416:	84 60       	ori	r24, 0x04	; 4
 418:	b8 2e       	mov	r11, r24
 41a:	09 c0       	rjmp	.+18     	; 0x42e <vfprintf+0x256>
 41c:	24 ff       	sbrs	r18, 4
 41e:	0a c0       	rjmp	.+20     	; 0x434 <vfprintf+0x25c>
 420:	9f 2f       	mov	r25, r31
 422:	96 60       	ori	r25, 0x06	; 6
 424:	b9 2e       	mov	r11, r25
 426:	06 c0       	rjmp	.+12     	; 0x434 <vfprintf+0x25c>
 428:	28 e0       	ldi	r18, 0x08	; 8
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	05 c0       	rjmp	.+10     	; 0x438 <vfprintf+0x260>
 42e:	20 e1       	ldi	r18, 0x10	; 16
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	02 c0       	rjmp	.+4      	; 0x438 <vfprintf+0x260>
 434:	20 e1       	ldi	r18, 0x10	; 16
 436:	32 e0       	ldi	r19, 0x02	; 2
 438:	f8 01       	movw	r30, r16
 43a:	b7 fe       	sbrs	r11, 7
 43c:	07 c0       	rjmp	.+14     	; 0x44c <vfprintf+0x274>
 43e:	60 81       	ld	r22, Z
 440:	71 81       	ldd	r23, Z+1	; 0x01
 442:	82 81       	ldd	r24, Z+2	; 0x02
 444:	93 81       	ldd	r25, Z+3	; 0x03
 446:	0c 5f       	subi	r16, 0xFC	; 252
 448:	1f 4f       	sbci	r17, 0xFF	; 255
 44a:	06 c0       	rjmp	.+12     	; 0x458 <vfprintf+0x280>
 44c:	60 81       	ld	r22, Z
 44e:	71 81       	ldd	r23, Z+1	; 0x01
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	0e 5f       	subi	r16, 0xFE	; 254
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	a4 01       	movw	r20, r8
 45a:	0e 94 06 03 	call	0x60c	; 0x60c <__ultoa_invert>
 45e:	a8 2e       	mov	r10, r24
 460:	a8 18       	sub	r10, r8
 462:	fb 2d       	mov	r31, r11
 464:	ff 77       	andi	r31, 0x7F	; 127
 466:	bf 2e       	mov	r11, r31
 468:	b6 fe       	sbrs	r11, 6
 46a:	0b c0       	rjmp	.+22     	; 0x482 <vfprintf+0x2aa>
 46c:	2b 2d       	mov	r18, r11
 46e:	2e 7f       	andi	r18, 0xFE	; 254
 470:	a5 14       	cp	r10, r5
 472:	50 f4       	brcc	.+20     	; 0x488 <vfprintf+0x2b0>
 474:	b4 fe       	sbrs	r11, 4
 476:	0a c0       	rjmp	.+20     	; 0x48c <vfprintf+0x2b4>
 478:	b2 fc       	sbrc	r11, 2
 47a:	08 c0       	rjmp	.+16     	; 0x48c <vfprintf+0x2b4>
 47c:	2b 2d       	mov	r18, r11
 47e:	2e 7e       	andi	r18, 0xEE	; 238
 480:	05 c0       	rjmp	.+10     	; 0x48c <vfprintf+0x2b4>
 482:	7a 2c       	mov	r7, r10
 484:	2b 2d       	mov	r18, r11
 486:	03 c0       	rjmp	.+6      	; 0x48e <vfprintf+0x2b6>
 488:	7a 2c       	mov	r7, r10
 48a:	01 c0       	rjmp	.+2      	; 0x48e <vfprintf+0x2b6>
 48c:	75 2c       	mov	r7, r5
 48e:	24 ff       	sbrs	r18, 4
 490:	0d c0       	rjmp	.+26     	; 0x4ac <vfprintf+0x2d4>
 492:	fe 01       	movw	r30, r28
 494:	ea 0d       	add	r30, r10
 496:	f1 1d       	adc	r31, r1
 498:	80 81       	ld	r24, Z
 49a:	80 33       	cpi	r24, 0x30	; 48
 49c:	11 f4       	brne	.+4      	; 0x4a2 <vfprintf+0x2ca>
 49e:	29 7e       	andi	r18, 0xE9	; 233
 4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <vfprintf+0x2dc>
 4a2:	22 ff       	sbrs	r18, 2
 4a4:	06 c0       	rjmp	.+12     	; 0x4b2 <vfprintf+0x2da>
 4a6:	73 94       	inc	r7
 4a8:	73 94       	inc	r7
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <vfprintf+0x2dc>
 4ac:	82 2f       	mov	r24, r18
 4ae:	86 78       	andi	r24, 0x86	; 134
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <vfprintf+0x2dc>
 4b2:	73 94       	inc	r7
 4b4:	23 fd       	sbrc	r18, 3
 4b6:	13 c0       	rjmp	.+38     	; 0x4de <vfprintf+0x306>
 4b8:	20 ff       	sbrs	r18, 0
 4ba:	06 c0       	rjmp	.+12     	; 0x4c8 <vfprintf+0x2f0>
 4bc:	5a 2c       	mov	r5, r10
 4be:	73 14       	cp	r7, r3
 4c0:	18 f4       	brcc	.+6      	; 0x4c8 <vfprintf+0x2f0>
 4c2:	53 0c       	add	r5, r3
 4c4:	57 18       	sub	r5, r7
 4c6:	73 2c       	mov	r7, r3
 4c8:	73 14       	cp	r7, r3
 4ca:	68 f4       	brcc	.+26     	; 0x4e6 <vfprintf+0x30e>
 4cc:	b7 01       	movw	r22, r14
 4ce:	80 e2       	ldi	r24, 0x20	; 32
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	2c 87       	std	Y+12, r18	; 0x0c
 4d4:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 4d8:	73 94       	inc	r7
 4da:	2c 85       	ldd	r18, Y+12	; 0x0c
 4dc:	f5 cf       	rjmp	.-22     	; 0x4c8 <vfprintf+0x2f0>
 4de:	73 14       	cp	r7, r3
 4e0:	10 f4       	brcc	.+4      	; 0x4e6 <vfprintf+0x30e>
 4e2:	37 18       	sub	r3, r7
 4e4:	01 c0       	rjmp	.+2      	; 0x4e8 <vfprintf+0x310>
 4e6:	31 2c       	mov	r3, r1
 4e8:	24 ff       	sbrs	r18, 4
 4ea:	12 c0       	rjmp	.+36     	; 0x510 <vfprintf+0x338>
 4ec:	b7 01       	movw	r22, r14
 4ee:	80 e3       	ldi	r24, 0x30	; 48
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	2c 87       	std	Y+12, r18	; 0x0c
 4f4:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 4f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 4fa:	22 ff       	sbrs	r18, 2
 4fc:	17 c0       	rjmp	.+46     	; 0x52c <vfprintf+0x354>
 4fe:	21 ff       	sbrs	r18, 1
 500:	03 c0       	rjmp	.+6      	; 0x508 <vfprintf+0x330>
 502:	88 e5       	ldi	r24, 0x58	; 88
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <vfprintf+0x334>
 508:	88 e7       	ldi	r24, 0x78	; 120
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	b7 01       	movw	r22, r14
 50e:	0c c0       	rjmp	.+24     	; 0x528 <vfprintf+0x350>
 510:	82 2f       	mov	r24, r18
 512:	86 78       	andi	r24, 0x86	; 134
 514:	59 f0       	breq	.+22     	; 0x52c <vfprintf+0x354>
 516:	21 fd       	sbrc	r18, 1
 518:	02 c0       	rjmp	.+4      	; 0x51e <vfprintf+0x346>
 51a:	80 e2       	ldi	r24, 0x20	; 32
 51c:	01 c0       	rjmp	.+2      	; 0x520 <vfprintf+0x348>
 51e:	8b e2       	ldi	r24, 0x2B	; 43
 520:	27 fd       	sbrc	r18, 7
 522:	8d e2       	ldi	r24, 0x2D	; 45
 524:	b7 01       	movw	r22, r14
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 52c:	a5 14       	cp	r10, r5
 52e:	38 f4       	brcc	.+14     	; 0x53e <vfprintf+0x366>
 530:	b7 01       	movw	r22, r14
 532:	80 e3       	ldi	r24, 0x30	; 48
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 53a:	5a 94       	dec	r5
 53c:	f7 cf       	rjmp	.-18     	; 0x52c <vfprintf+0x354>
 53e:	aa 94       	dec	r10
 540:	f4 01       	movw	r30, r8
 542:	ea 0d       	add	r30, r10
 544:	f1 1d       	adc	r31, r1
 546:	80 81       	ld	r24, Z
 548:	b7 01       	movw	r22, r14
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 550:	a1 10       	cpse	r10, r1
 552:	f5 cf       	rjmp	.-22     	; 0x53e <vfprintf+0x366>
 554:	33 20       	and	r3, r3
 556:	09 f4       	brne	.+2      	; 0x55a <vfprintf+0x382>
 558:	51 ce       	rjmp	.-862    	; 0x1fc <vfprintf+0x24>
 55a:	b7 01       	movw	r22, r14
 55c:	80 e2       	ldi	r24, 0x20	; 32
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <fputc>
 564:	3a 94       	dec	r3
 566:	f6 cf       	rjmp	.-20     	; 0x554 <vfprintf+0x37c>
 568:	f7 01       	movw	r30, r14
 56a:	86 81       	ldd	r24, Z+6	; 0x06
 56c:	97 81       	ldd	r25, Z+7	; 0x07
 56e:	02 c0       	rjmp	.+4      	; 0x574 <vfprintf+0x39c>
 570:	8f ef       	ldi	r24, 0xFF	; 255
 572:	9f ef       	ldi	r25, 0xFF	; 255
 574:	2c 96       	adiw	r28, 0x0c	; 12
 576:	e2 e1       	ldi	r30, 0x12	; 18
 578:	0c 94 80 03 	jmp	0x700	; 0x700 <__epilogue_restores__>

0000057c <strnlen_P>:
 57c:	fc 01       	movw	r30, r24
 57e:	05 90       	lpm	r0, Z+
 580:	61 50       	subi	r22, 0x01	; 1
 582:	70 40       	sbci	r23, 0x00	; 0
 584:	01 10       	cpse	r0, r1
 586:	d8 f7       	brcc	.-10     	; 0x57e <strnlen_P+0x2>
 588:	80 95       	com	r24
 58a:	90 95       	com	r25
 58c:	8e 0f       	add	r24, r30
 58e:	9f 1f       	adc	r25, r31
 590:	08 95       	ret

00000592 <strnlen>:
 592:	fc 01       	movw	r30, r24
 594:	61 50       	subi	r22, 0x01	; 1
 596:	70 40       	sbci	r23, 0x00	; 0
 598:	01 90       	ld	r0, Z+
 59a:	01 10       	cpse	r0, r1
 59c:	d8 f7       	brcc	.-10     	; 0x594 <strnlen+0x2>
 59e:	80 95       	com	r24
 5a0:	90 95       	com	r25
 5a2:	8e 0f       	add	r24, r30
 5a4:	9f 1f       	adc	r25, r31
 5a6:	08 95       	ret

000005a8 <fputc>:
 5a8:	0f 93       	push	r16
 5aa:	1f 93       	push	r17
 5ac:	cf 93       	push	r28
 5ae:	df 93       	push	r29
 5b0:	18 2f       	mov	r17, r24
 5b2:	09 2f       	mov	r16, r25
 5b4:	eb 01       	movw	r28, r22
 5b6:	8b 81       	ldd	r24, Y+3	; 0x03
 5b8:	81 fd       	sbrc	r24, 1
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <fputc+0x1a>
 5bc:	8f ef       	ldi	r24, 0xFF	; 255
 5be:	9f ef       	ldi	r25, 0xFF	; 255
 5c0:	20 c0       	rjmp	.+64     	; 0x602 <fputc+0x5a>
 5c2:	82 ff       	sbrs	r24, 2
 5c4:	10 c0       	rjmp	.+32     	; 0x5e6 <fputc+0x3e>
 5c6:	4e 81       	ldd	r20, Y+6	; 0x06
 5c8:	5f 81       	ldd	r21, Y+7	; 0x07
 5ca:	2c 81       	ldd	r18, Y+4	; 0x04
 5cc:	3d 81       	ldd	r19, Y+5	; 0x05
 5ce:	42 17       	cp	r20, r18
 5d0:	53 07       	cpc	r21, r19
 5d2:	7c f4       	brge	.+30     	; 0x5f2 <fputc+0x4a>
 5d4:	e8 81       	ld	r30, Y
 5d6:	f9 81       	ldd	r31, Y+1	; 0x01
 5d8:	9f 01       	movw	r18, r30
 5da:	2f 5f       	subi	r18, 0xFF	; 255
 5dc:	3f 4f       	sbci	r19, 0xFF	; 255
 5de:	39 83       	std	Y+1, r19	; 0x01
 5e0:	28 83       	st	Y, r18
 5e2:	10 83       	st	Z, r17
 5e4:	06 c0       	rjmp	.+12     	; 0x5f2 <fputc+0x4a>
 5e6:	e8 85       	ldd	r30, Y+8	; 0x08
 5e8:	f9 85       	ldd	r31, Y+9	; 0x09
 5ea:	81 2f       	mov	r24, r17
 5ec:	09 95       	icall
 5ee:	89 2b       	or	r24, r25
 5f0:	29 f7       	brne	.-54     	; 0x5bc <fputc+0x14>
 5f2:	2e 81       	ldd	r18, Y+6	; 0x06
 5f4:	3f 81       	ldd	r19, Y+7	; 0x07
 5f6:	2f 5f       	subi	r18, 0xFF	; 255
 5f8:	3f 4f       	sbci	r19, 0xFF	; 255
 5fa:	3f 83       	std	Y+7, r19	; 0x07
 5fc:	2e 83       	std	Y+6, r18	; 0x06
 5fe:	81 2f       	mov	r24, r17
 600:	90 2f       	mov	r25, r16
 602:	df 91       	pop	r29
 604:	cf 91       	pop	r28
 606:	1f 91       	pop	r17
 608:	0f 91       	pop	r16
 60a:	08 95       	ret

0000060c <__ultoa_invert>:
 60c:	fa 01       	movw	r30, r20
 60e:	aa 27       	eor	r26, r26
 610:	28 30       	cpi	r18, 0x08	; 8
 612:	51 f1       	breq	.+84     	; 0x668 <__ultoa_invert+0x5c>
 614:	20 31       	cpi	r18, 0x10	; 16
 616:	81 f1       	breq	.+96     	; 0x678 <__ultoa_invert+0x6c>
 618:	e8 94       	clt
 61a:	6f 93       	push	r22
 61c:	6e 7f       	andi	r22, 0xFE	; 254
 61e:	6e 5f       	subi	r22, 0xFE	; 254
 620:	7f 4f       	sbci	r23, 0xFF	; 255
 622:	8f 4f       	sbci	r24, 0xFF	; 255
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	af 4f       	sbci	r26, 0xFF	; 255
 628:	b1 e0       	ldi	r27, 0x01	; 1
 62a:	3e d0       	rcall	.+124    	; 0x6a8 <__ultoa_invert+0x9c>
 62c:	b4 e0       	ldi	r27, 0x04	; 4
 62e:	3c d0       	rcall	.+120    	; 0x6a8 <__ultoa_invert+0x9c>
 630:	67 0f       	add	r22, r23
 632:	78 1f       	adc	r23, r24
 634:	89 1f       	adc	r24, r25
 636:	9a 1f       	adc	r25, r26
 638:	a1 1d       	adc	r26, r1
 63a:	68 0f       	add	r22, r24
 63c:	79 1f       	adc	r23, r25
 63e:	8a 1f       	adc	r24, r26
 640:	91 1d       	adc	r25, r1
 642:	a1 1d       	adc	r26, r1
 644:	6a 0f       	add	r22, r26
 646:	71 1d       	adc	r23, r1
 648:	81 1d       	adc	r24, r1
 64a:	91 1d       	adc	r25, r1
 64c:	a1 1d       	adc	r26, r1
 64e:	20 d0       	rcall	.+64     	; 0x690 <__ultoa_invert+0x84>
 650:	09 f4       	brne	.+2      	; 0x654 <__ultoa_invert+0x48>
 652:	68 94       	set
 654:	3f 91       	pop	r19
 656:	2a e0       	ldi	r18, 0x0A	; 10
 658:	26 9f       	mul	r18, r22
 65a:	11 24       	eor	r1, r1
 65c:	30 19       	sub	r19, r0
 65e:	30 5d       	subi	r19, 0xD0	; 208
 660:	31 93       	st	Z+, r19
 662:	de f6       	brtc	.-74     	; 0x61a <__ultoa_invert+0xe>
 664:	cf 01       	movw	r24, r30
 666:	08 95       	ret
 668:	46 2f       	mov	r20, r22
 66a:	47 70       	andi	r20, 0x07	; 7
 66c:	40 5d       	subi	r20, 0xD0	; 208
 66e:	41 93       	st	Z+, r20
 670:	b3 e0       	ldi	r27, 0x03	; 3
 672:	0f d0       	rcall	.+30     	; 0x692 <__ultoa_invert+0x86>
 674:	c9 f7       	brne	.-14     	; 0x668 <__ultoa_invert+0x5c>
 676:	f6 cf       	rjmp	.-20     	; 0x664 <__ultoa_invert+0x58>
 678:	46 2f       	mov	r20, r22
 67a:	4f 70       	andi	r20, 0x0F	; 15
 67c:	40 5d       	subi	r20, 0xD0	; 208
 67e:	4a 33       	cpi	r20, 0x3A	; 58
 680:	18 f0       	brcs	.+6      	; 0x688 <__ultoa_invert+0x7c>
 682:	49 5d       	subi	r20, 0xD9	; 217
 684:	31 fd       	sbrc	r19, 1
 686:	40 52       	subi	r20, 0x20	; 32
 688:	41 93       	st	Z+, r20
 68a:	02 d0       	rcall	.+4      	; 0x690 <__ultoa_invert+0x84>
 68c:	a9 f7       	brne	.-22     	; 0x678 <__ultoa_invert+0x6c>
 68e:	ea cf       	rjmp	.-44     	; 0x664 <__ultoa_invert+0x58>
 690:	b4 e0       	ldi	r27, 0x04	; 4
 692:	a6 95       	lsr	r26
 694:	97 95       	ror	r25
 696:	87 95       	ror	r24
 698:	77 95       	ror	r23
 69a:	67 95       	ror	r22
 69c:	ba 95       	dec	r27
 69e:	c9 f7       	brne	.-14     	; 0x692 <__ultoa_invert+0x86>
 6a0:	00 97       	sbiw	r24, 0x00	; 0
 6a2:	61 05       	cpc	r22, r1
 6a4:	71 05       	cpc	r23, r1
 6a6:	08 95       	ret
 6a8:	9b 01       	movw	r18, r22
 6aa:	ac 01       	movw	r20, r24
 6ac:	0a 2e       	mov	r0, r26
 6ae:	06 94       	lsr	r0
 6b0:	57 95       	ror	r21
 6b2:	47 95       	ror	r20
 6b4:	37 95       	ror	r19
 6b6:	27 95       	ror	r18
 6b8:	ba 95       	dec	r27
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__ultoa_invert+0xa2>
 6bc:	62 0f       	add	r22, r18
 6be:	73 1f       	adc	r23, r19
 6c0:	84 1f       	adc	r24, r20
 6c2:	95 1f       	adc	r25, r21
 6c4:	a0 1d       	adc	r26, r0
 6c6:	08 95       	ret

000006c8 <__prologue_saves__>:
 6c8:	2f 92       	push	r2
 6ca:	3f 92       	push	r3
 6cc:	4f 92       	push	r4
 6ce:	5f 92       	push	r5
 6d0:	6f 92       	push	r6
 6d2:	7f 92       	push	r7
 6d4:	8f 92       	push	r8
 6d6:	9f 92       	push	r9
 6d8:	af 92       	push	r10
 6da:	bf 92       	push	r11
 6dc:	cf 92       	push	r12
 6de:	df 92       	push	r13
 6e0:	ef 92       	push	r14
 6e2:	ff 92       	push	r15
 6e4:	0f 93       	push	r16
 6e6:	1f 93       	push	r17
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	cd b7       	in	r28, 0x3d	; 61
 6ee:	de b7       	in	r29, 0x3e	; 62
 6f0:	ca 1b       	sub	r28, r26
 6f2:	db 0b       	sbc	r29, r27
 6f4:	0f b6       	in	r0, 0x3f	; 63
 6f6:	f8 94       	cli
 6f8:	de bf       	out	0x3e, r29	; 62
 6fa:	0f be       	out	0x3f, r0	; 63
 6fc:	cd bf       	out	0x3d, r28	; 61
 6fe:	09 94       	ijmp

00000700 <__epilogue_restores__>:
 700:	2a 88       	ldd	r2, Y+18	; 0x12
 702:	39 88       	ldd	r3, Y+17	; 0x11
 704:	48 88       	ldd	r4, Y+16	; 0x10
 706:	5f 84       	ldd	r5, Y+15	; 0x0f
 708:	6e 84       	ldd	r6, Y+14	; 0x0e
 70a:	7d 84       	ldd	r7, Y+13	; 0x0d
 70c:	8c 84       	ldd	r8, Y+12	; 0x0c
 70e:	9b 84       	ldd	r9, Y+11	; 0x0b
 710:	aa 84       	ldd	r10, Y+10	; 0x0a
 712:	b9 84       	ldd	r11, Y+9	; 0x09
 714:	c8 84       	ldd	r12, Y+8	; 0x08
 716:	df 80       	ldd	r13, Y+7	; 0x07
 718:	ee 80       	ldd	r14, Y+6	; 0x06
 71a:	fd 80       	ldd	r15, Y+5	; 0x05
 71c:	0c 81       	ldd	r16, Y+4	; 0x04
 71e:	1b 81       	ldd	r17, Y+3	; 0x03
 720:	aa 81       	ldd	r26, Y+2	; 0x02
 722:	b9 81       	ldd	r27, Y+1	; 0x01
 724:	ce 0f       	add	r28, r30
 726:	d1 1d       	adc	r29, r1
 728:	0f b6       	in	r0, 0x3f	; 63
 72a:	f8 94       	cli
 72c:	de bf       	out	0x3e, r29	; 62
 72e:	0f be       	out	0x3f, r0	; 63
 730:	cd bf       	out	0x3d, r28	; 61
 732:	ed 01       	movw	r28, r26
 734:	08 95       	ret

00000736 <_exit>:
 736:	f8 94       	cli

00000738 <__stop_program>:
 738:	ff cf       	rjmp	.-2      	; 0x738 <__stop_program>
